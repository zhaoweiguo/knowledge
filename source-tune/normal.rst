常用
####

常见软件性能
============

* redis: 并发请求数也就每秒 3 万
* nginx 负载均衡性能是 3-5 万左
* mc 的读取性能 3-5 万左右
* kafka 号称百万级, 百万级是集群性能
* zookeeper 写入读取 2 万以上
* http 请求访问大概在 1.5-2 万左右(HTTP get 操作访问一个简单页面测试结果)
* mysql 的 tps 和写入的数据有关，我们测试了 mysql 写入 k-v 数据，主键存储 k，tps 上万
* 业务系统一个 TPS 接口的请求时间 10~50ms 是比较合理的，QPS 5~20ms 是比较合理的

理想情况下，性能测试的时候，CPU 能压到 80% 以上，此时的 TPS/QPS 就是峰值，如果 CPU 没压满，指标就上不去，就可能有优化的空间。
如果是业务系统，由于业务复杂度差异很大，有的每秒 500 请求可能就是高性能了，因此需要针对业务进行性能测试，确立性能基线，方便后续架构设计做比较




线路传输速度
============

线路传输的速度是毫秒级别，同一机房内部能够做到几毫秒；分布在不同地方的机房，传输耗时需要几十甚至上百毫秒。例如，从广州机房到北京机房，稳定情况下 ping 延时大约是 50ms，不稳定情况下可能达到 1s 甚至更多



其他
====

* `Mysql.8.0 与 MongoDB.4.2大数据量查询性能对比 <https://blog.csdn.net/weixin_41715077/article/details/102879357>`_
* `MongoDB.4.2 大表分片查询性能对比 <https://www.cnblogs.com/dobal/p/12039769.html>`_



功夫在诗外::

    关键:
      不在于怎么用数据来证明你的目标达成
      在于要有数据支撑
    关于优化:
      你不能优化你没有测量的系统
      You can't optimize what you don't have measure for


性能优化::

    充满挑战
     性能是主观的
     系统是复杂的
     可能多问题并存

::

    pv = 日活 * 人均点击次数
    并发均值 = pv/86400
    并发峰值 = 并发均值 * N


.. figure:: /images/cores/availability-999.png
   :width: 80%





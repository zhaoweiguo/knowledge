架构师
######

如何成为好的架构师
==================

职责::

    1. 确保团队有个共同的技术愿景
        * 帮助团队向客户交付他们想要的系统
    2. 只和一个团队工作
        * 技术引领者
    3. 负责整个项目组的技术愿景
        * 协调多个团队间的工作

难做好的原因::

    响应客户的需求变更
    放弃一开始设计出完美系统的想法
    设计一个可以不断演化的框架
    新知识可以很容易的应用到系统中


架构师设计
==========

如何进行性能测试，性能测试的流程是什么？性能测试的主要关注指标有哪些？


怎么理解领域驱动设计DDD?
DDD的优缺点是什么？

导致系统故障无法正常访问的原因有哪些？保障系统稳定高可用的方案有哪些？
如何保护数据库中存储的用户密码，用时序图展示「用户密码」加密存储与登录验证的过程

架构师的主要能力::

    1. 编程
    2. 基础技术掌握能力
    3. 常用技术产品的理解与应用能力
    4. 性能优化与分析故障的能力
    5. 常用架构模式和框架的理解 与应用能力
    6. 建模以及设计文档的方法和能力
    7. 业务理解与功能模块及非功能模块拆解能力
    8. 快速学习能力
    9. 沟通与领导能力



Shawn：“PPT 架构师”的口头禅是“细节不讨论”，一个优秀的架构师，需要对细节有多少考虑呢::

    华仔：这是一个非常好的问题，也是很多同学困惑的问题，我分享一下我的做法，以我学习 Elasticsearch 为例，具体的做法是：
    1. 搭建一个单机伪集群，搭建完成后看看安装路径下的文件和目录，看看配置文件有哪些配置项，不同的配置项会有什么样的影响。
    2. 执行常用的操作，例如创建索引，插入、删除、查询文档，查看一下各种输出。
    3. 研究其基本原理，例如索引、分片、副本等，研究的时候要多思考，例如索引应该如何建，分片数量等
    4. 和其他类似系统对比，例如 Solr、Sphinx，研究其优点、缺点、适用场景。
    5. 模拟一个案例看看怎么应用。例如，假设我用 Elasticsearch 来存储淘宝的商品信息，我应该如何设计索引和分片。
    6. 查看业界使用的案例，思考一下别人为何这么用；看看别人测试的结果，大概了解性能范围。
    7. 如果某部分特别有兴趣或者很关键，可能去看源码，例如 Elasticsearch 的选举算法
    8. 如果确定要引入，会进行性能和可用性测试。

    不建议拿到一个系统一开始就去读源码，效率太低，而且效果也不好



架构师沟通能力::

    架构师是业务和技术之间的桥梁，同时通常情况下还会确定整体项目的步骤。
    因此，架构师的沟通能力非常重要，
    既要说得动老板，让老板支持自己的设计决定；
    又要镇得住技术人员，让技术人员信服自己的设计选择；
    同时还要能够理解业务，结合业务不同发展阶段设计合适的架构，所以也要参与产品和项目决策。
    由于架构设计过程中存在很多判断和选择，而且不一定都有明确量化的标准，因此不同的人有不同的看法是普遍情况。
    这种情况下架构师既需要专业能力过硬，又需要具备良好的沟通技巧，才能促使业务、项目、技术三方达成一致。

    当然，架构师的核心能力还是技术能力，过硬的技术才是良好沟通的基础，
    否则单纯靠沟通技巧甚至花言巧语，一次两次可能奏效，但后面被打脸打多了，也就没人信任了。


架构师的职责::

    制定规范 + 指导落地

    架构师根据业务需求所制定的合理且可落地的技术规范，我们将这样的规范称为架构。

微服务架构师需要具备以下基本职责::

    1. 分析业务需求并切分微服务边界
    2. 定义架构规范与文档标准
    3. 确保微服务架构顺利落地
    4. 改善微服务架构并提高开发效率

微服务架构师必须面对并克服这些挑战::

    1. 架构需要适应不断变化的业务需求
    2. 架构具备稳定性、扩展性、安全性、容错性等
    3. 使技术团队深刻理解微服务思想
    4. 展现微服务架构的价值






















